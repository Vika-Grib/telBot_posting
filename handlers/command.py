from aiogram import types, Dispatcher
from createBot import dp, bot
from DataBase import Data_Base
from keyboards import kb_main, kb_post, urlkb
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


async def start(message: types.Message):
    await bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç!', reply_markup=kb_main)
    await message.delete()


# @dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await bot.send_message(message.from_user.id, f'<b>–¢–∞–±–ª–∏—Ü–∞</b> - —Å–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π(google)\n'
                                                 f'<b><i>–í—ã–≥—Ä—É–∑–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:</i></b>\n'
                                                 f'<b>–ó–∞–≥—Ä—É–∑–∏—Ç—å</b> - –ø–æ—à–∞–≥–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞\n'
                                                 f'<b>–û—Ç–º–µ–Ω–∞</b> - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞\n'
                                                 f'<b><i>–†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç–∞—Ç—å—è–º–∏:</i></b>\n'
                                                 f'<b>–°–ø–∏—Å–æ–∫</b> - —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π\n'
                                                 f'<b>–°—Ç–∞—Ç—å—è</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ –ø–æ –Ω–æ–º–µ—Ä\n'
                                                 f'<b>–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç</b> - —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç –ø–æ –Ω–æ–º–µ—Ä—É', parse_mode='html')
    await message.delete()


# @dp.message_handler(commands=['—Ç–∞–±–ª–∏—Ü–∞'])
async def table(message: types.Message):
    await bot.send_message(message.from_user.id, 'üëÅ –¢–∞–±–ª–∏—Ü–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π ‚úçÔ∏è', reply_markup=urlkb)
    await message.delete()


ikb_list1 = InlineKeyboardButton(text='–µ—â–µ 10 ->', callback_data='list1')
ikb_list = InlineKeyboardMarkup(row_width=1).add(ikb_list1)
ikb_list2 = InlineKeyboardButton(text='–µ—â–µ 1 ->', callback_data='list2')
ikb2_list = InlineKeyboardMarkup(row_width=1).add(ikb_list2)


# @dp.message_handler(commands=['—Å–ø–∏—Å–æ–∫'])
async def read_db(message: types.Message):
    await Data_Base.sql_read(message)
    await bot.send_message(message.from_user.id, '-' * 10, reply_markup=kb_post)
    await bot.send_message(message.from_user.id, '–î–∞–ª–µ–µ?', reply_markup=ikb_list)
    global chat_id
    chat_id = message.from_user.id


@dp.callback_query_handler(text='list1')
async def yes_call(callback: types.CallbackQuery):
    await Data_Base.sql_read2(callback)
    await callback.bot.send_message(chat_id, '–î–∞–ª–µ–µ?', reply_markup=ikb2_list)


@dp.callback_query_handler(text='list2')
async def yes_call(callback: types.CallbackQuery):
    await Data_Base.sql_read3(callback)
    await callback.bot.send_message(chat_id, '–ø–æ–∫–∞ —Ç–∞–∫)')


def register_hadnlers_client(dp: Dispatcher):
    dp.register_message_handler(start, commands=['start'])
    dp.register_message_handler(help, commands=['help'])
    dp.register_message_handler(table, commands=['—Ç–∞–±–ª–∏—Ü–∞'])
    dp.register_message_handler(read_db, commands=['—Å–ø–∏—Å–æ–∫'])
